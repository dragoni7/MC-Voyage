
[Structures]

	[Structures.tower]

		[Structures.tower.placement]
			#
			# Percent chance of generating in an allowed chunk.
			# Default: 75
			#Range: 0 ~ 100
			probability = 80

		[Structures.tower.structures]

			[Structures.tower.structures.structure]

				[Structures.tower.structures.structure.biomes]
					#
					# A filter for which biomes this structure should generate in. Entries are formatted as follows:
					# - Biome: "minecraft:plains"
					# - Tag: "#minecraft:is_forest"
					# - Prefix an entry with ! to exclude it: "!#minecraft:is_ocean"
					# Example: ["#minecraft:is_forest", "!minecraft:flower_forest"] This will include all biomes tagged as forests except for flower forests.
					# Default: ["#dungeons_plus:has_structure/has_tower"]
					biomes = ["#dungeons_plus:has_structure/has_tower"]

	[Structures.leviathan]

		[Structures.leviathan.placement]
			#
			# Percent chance of generating in an allowed chunk.
			# Default: 75
			#Range: 0 ~ 100
			probability = 80

		[Structures.leviathan.structures]

			[Structures.leviathan.structures.structure]

				[Structures.leviathan.structures.structure.biomes]
					#
					# A filter for which biomes this structure should generate in. Entries are formatted as follows:
					# - Biome: "minecraft:plains"
					# - Tag: "#minecraft:is_forest"
					# - Prefix an entry with ! to exclude it: "!#minecraft:is_ocean"
					# Example: ["#minecraft:is_forest", "!minecraft:flower_forest"] This will include all biomes tagged as forests except for flower forests.
					# Default: ["#dungeons_plus:has_structure/has_leviathan"]
					biomes = ["#dungeons_plus:has_structure/has_leviathan"]

	[Structures.snowy_temple]

		[Structures.snowy_temple.placement]
			#
			# Percent chance of generating in an allowed chunk.
			# Default: 75
			#Range: 0 ~ 100
			probability = 75

		[Structures.snowy_temple.structures]

			[Structures.snowy_temple.structures.structure]

				[Structures.snowy_temple.structures.structure.biomes]
					#
					# A filter for which biomes this structure should generate in. Entries are formatted as follows:
					# - Biome: "minecraft:plains"
					# - Tag: "#minecraft:is_forest"
					# - Prefix an entry with ! to exclude it: "!#minecraft:is_ocean"
					# Example: ["#minecraft:is_forest", "!minecraft:flower_forest"] This will include all biomes tagged as forests except for flower forests.
					# Default: ["#dungeons_plus:has_structure/has_snowy_temple"]
					biomes = ["#dungeons_plus:has_structure/has_snowy_temple"]

	[Structures.reanimated_ruins]

		[Structures.reanimated_ruins.placement]
			#
			# Percent chance of generating in an allowed chunk.
			# Default: 75
			#Range: 0 ~ 100
			probability = 75

		[Structures.reanimated_ruins.structures]

			[Structures.reanimated_ruins.structures.mossy]

				[Structures.reanimated_ruins.structures.mossy.biomes]
					#
					# A filter for which biomes this structure should generate in. Entries are formatted as follows:
					# - Biome: "minecraft:plains"
					# - Tag: "#minecraft:is_forest"
					# - Prefix an entry with ! to exclude it: "!#minecraft:is_ocean"
					# Example: ["#minecraft:is_forest", "!minecraft:flower_forest"] This will include all biomes tagged as forests except for flower forests.
					# Default: ["#dungeons_plus:has_structure/has_reanimated_ruins_mossy"]
					biomes = ["#dungeons_plus:has_structure/has_reanimated_ruins_mossy"]

			[Structures.reanimated_ruins.structures.mesa]

				[Structures.reanimated_ruins.structures.mesa.biomes]
					#
					# A filter for which biomes this structure should generate in. Entries are formatted as follows:
					# - Biome: "minecraft:plains"
					# - Tag: "#minecraft:is_forest"
					# - Prefix an entry with ! to exclude it: "!#minecraft:is_ocean"
					# Example: ["#minecraft:is_forest", "!minecraft:flower_forest"] This will include all biomes tagged as forests except for flower forests.
					# Default: ["#dungeons_plus:has_structure/has_reanimated_ruins_mesa"]
					biomes = ["#dungeons_plus:has_structure/has_reanimated_ruins_mesa"]

			[Structures.reanimated_ruins.structures.frozen]

				[Structures.reanimated_ruins.structures.frozen.biomes]
					#
					# A filter for which biomes this structure should generate in. Entries are formatted as follows:
					# - Biome: "minecraft:plains"
					# - Tag: "#minecraft:is_forest"
					# - Prefix an entry with ! to exclude it: "!#minecraft:is_ocean"
					# Example: ["#minecraft:is_forest", "!minecraft:flower_forest"] This will include all biomes tagged as forests except for flower forests.
					# Default: ["#dungeons_plus:has_structure/has_reanimated_ruins_frozen"]
					biomes = ["#dungeons_plus:has_structure/has_reanimated_ruins_frozen"]

	[Structures.warped_garden]

		[Structures.warped_garden.placement]
			#
			# Percent chance of generating in an allowed chunk.
			# Default: 75
			#Range: 0 ~ 100
			probability = 75

		[Structures.warped_garden.structures]

			[Structures.warped_garden.structures.structure]

				[Structures.warped_garden.structures.structure.biomes]
					#
					# A filter for which biomes this structure should generate in. Entries are formatted as follows:
					# - Biome: "minecraft:plains"
					# - Tag: "#minecraft:is_forest"
					# - Prefix an entry with ! to exclude it: "!#minecraft:is_ocean"
					# Example: ["#minecraft:is_forest", "!minecraft:flower_forest"] This will include all biomes tagged as forests except for flower forests.
					# Default: ["#dungeons_plus:has_structure/has_warped_garden"]
					biomes = ["#dungeons_plus:has_structure/has_warped_garden"]

	[Structures.soul_prison]

		[Structures.soul_prison.placement]
			#
			# Percent chance of generating in an allowed chunk.
			# Default: 75
			#Range: 0 ~ 100
			probability = 75

		[Structures.soul_prison.structures]

			[Structures.soul_prison.structures.structure]

				[Structures.soul_prison.structures.structure.biomes]
					#
					# A filter for which biomes this structure should generate in. Entries are formatted as follows:
					# - Biome: "minecraft:plains"
					# - Tag: "#minecraft:is_forest"
					# - Prefix an entry with ! to exclude it: "!#minecraft:is_ocean"
					# Example: ["#minecraft:is_forest", "!minecraft:flower_forest"] This will include all biomes tagged as forests except for flower forests.
					# Default: ["#dungeons_plus:has_structure/has_soul_prison"]
					biomes = ["#dungeons_plus:has_structure/has_soul_prison"]

	[Structures.end_ruins]

		[Structures.end_ruins.placement]
			#
			# Percent chance of generating in an allowed chunk.
			# Default: 75
			#Range: 0 ~ 100
			probability = 75

		[Structures.end_ruins.structures]

			[Structures.end_ruins.structures.structure]

				[Structures.end_ruins.structures.structure.biomes]
					#
					# A filter for which biomes this structure should generate in. Entries are formatted as follows:
					# - Biome: "minecraft:plains"
					# - Tag: "#minecraft:is_forest"
					# - Prefix an entry with ! to exclude it: "!#minecraft:is_ocean"
					# Example: ["#minecraft:is_forest", "!minecraft:flower_forest"] This will include all biomes tagged as forests except for flower forests.
					# Default: ["#dungeons_plus:has_structure/has_end_ruins"]
					biomes = ["#dungeons_plus:has_structure/has_end_ruins"]

[Mobs]
	#
	# Percent chance that a Husk will wield a Leviathan Blade in the Leviathan.
	# Default: 5
	#Range: 0 ~ 100
	husk_leviathan_blade_chance = 20
	#
	# Determines if Husks will drop sand when spawned in the Leviathan.
	# Default: true
	husks_drop_sand = true
	#
	# Percent chance that a Stray will wear a Frosted Cowl in the Snowy Temple.
	# Default: 5
	#Range: 0 ~ 100
	stray_frosted_cowl_chance = 20
	#
	# Determines if Strays will drop ice when spawned in the Snowy Temple.
	# Default: true
	strays_drop_ice = true
	#
	# Percent chance that a Drowned will wear a Warped Axe in the Warped Garden.
	# Default: 5
	#Range: 0 ~ 100
	drowned_warped_axe_chance = 20
	#
	# Percent chance that a Drowned will hold coral in the Warped Garden.
	# Default: 30
	#Range: 0 ~ 100
	drowned_coral_chance = 30
	#
	# Percent chance that a Skeleton will wield a Soul Cannon in the Soul Prison.
	# Default: 5
	#Range: 0 ~ 100
	skeleton_soul_cannon_chance = 5

[Items]
	#
	# When true, throwable items with loyalty will return if they enter the void.
	# Default: true
	loyalty_returns_from_void = true
	#
	# When true, the fireball from a Soul Cannon enchanted with flame will place fire.
	# Default: true
	soul_cannon_produces_fire = true

["Mod Compat"]

	["Mod Compat".Waystones]
		#
		# Percent chance for a waystone from Waystones to generate on top of the tower
		# Default: 100
		#Range: 0 ~ 100
		tower_waystone_chance = 100

